version: 0.2

phases:

  # Optional pre-install phase.
  # Install dependencies required for the build.
  # For example, set runtime versions like PHP or Node.js. 
  install:
    on-failure: ABORT
    runtime-versions:
      php: 8.3
    commands:
      - echo "Installing dependencies"
  
  # Optional pre-build phase.
  # Prepare the build environment. For example authenticate with an aws account.
  pre_build:
    on-failure: ABORT
    commands:
      - echo "Authenticating with AWS"
      - aws ecr get-login-password --region eu-south-1 | docker login --username AWS --password-stdin $REPOSITORY
  
  # Required build phase.
  # Build the container image.
  build:
    on-failure: ABORT
    commands:
      - echo "Building the Docker image"
      - docker build -t $IMAGE .
      - echo "Tagging the Docker image"
      - docker tag $IMAGE:$IMAGE_TAG $REPOSITORY/$IMAGE:$IMAGE_TAG
  
  # Optional post-build phase.
  # After the build completes, clean up build artifacts, push the image to a registry, or deploy the image to a test environment.
  post_build:
    on-failure: ABORT
    commands:
      - echo "Display images"
      - docker images ls -a
      - echo "Pushing the Docker image to ECR"
      - docker push $REPOSITORY/$IMAGE:$IMAGE_TAG
  